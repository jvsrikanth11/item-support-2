name: Pull Secrets
on:   
  workflow_dispatch:
    inputs:
      targetRepo: 
        description: 'Environment (dev, stage, prod)'
        required: true
jobs:
  Pull-Secrets:
    runs-on: ubuntu-latest
    steps:
      # List out repository details
      - name: Step 1 - Echo out a GitHub Actions Secret to the logs
        run: |
          echo "The job was automatically triggered by a ${{ github.event_name }} event."
          echo "This job is now running on a ${{ runner.os }} server hosted by GitHub!"
          echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      
      # Check out repository code
      - name: Step 2 - Check out repository code
        id: push_secrets
        uses: actions/checkout@main
        env:
          APP_KEY: ${{ secrets.APP_KEY }}
        with:
          repository: 'jvsrikanth11/scrs-configurer'
          ref: main
          token: ${{ secrets.ACCESS_TOKEN }}
          
      - name: view the secrets context
        run: echo "$SECRETS_CONTEXT"
        env:
          SECRETS_CONTEXT: ${{ toJson(secrets) }}
        
      # List files in the repository
      - name: Step 6 - List files in the repository
        run: |
          ls ${{ github.workspace }}
          echo "The ${{ github.repository }} repository has been cloned to the runner."
          echo "This job's status is ${{ job.status }}."
      
      # Determine environment
      - name: Step 7 - Determine environment
        id: determine_environment
        run: 
          echo "::set-output name=environment::${GITHUB_REF#refs/heads/}"
          echo $environment
      
      # Echo out a GitHub Actions Secret to the logs
      - name: Step 8 - Echo out a GitHub Actions Secret to the logs
        run: |
          echo "The GitHub Action Secret will be masked:  "
          echo ${{ secrets.APP_KEY }}
          echo "Trick to echo GitHub Actions Secret:  "
          echo ${{secrets.APP_KEY}} | sed 's/./& /g'
          
      # Use a GitHub Actions secret variable in a bash shell
      - name: Step 9 - GitHub Action if statement (true)
        env: 
          WHO_TO_TRUST: ${{ secrets.APP_KEY }}
        if:  env.WHO_TO_TRUST == 'APP_KEY'
        run: echo "I know what the secret token is!"

      # A GitHub Actions if statement with a secret environment variable
      - name: Step 10 - Conditional GitHub Action (false)
        shell: bash
        env: 
          WHO_TO_TRUST: ${{ secrets.APP_KEY }}
        if:  env.WHO_TO_TRUST != 'APP_KEY'
        run: echo "I was wrong thinking the GitHub secret was 'TrustNobody'!"
